CREATE TABLE student_grades (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    number_grade INTEGER,
    fraction_completed REAL);
    
INSERT INTO student_grades (name, number_grade, fraction_completed)
    VALUES ("Winston", 90, 0.805);
INSERT INTO student_grades (name, number_grade, fraction_completed)
    VALUES ("Winnefer", 95, 0.901);
INSERT INTO student_grades (name, number_grade, fraction_completed)
    VALUES ("Winsteen", 85, 0.906);
INSERT INTO student_grades (name, number_grade, fraction_completed)
    VALUES ("Wincifer", 66, 0.7054);
INSERT INTO student_grades (name, number_grade, fraction_completed)
    VALUES ("Winster", 76, 0.5013);
INSERT INTO student_grades (name, number_grade, fraction_completed)
    VALUES ("Winstonia", 82, 0.9045);
    
/* Here I was asked to convert the fractions into percentage, so I used the ROUND command and multiplied the fraction_completed column
into a percentage, and created the new column percent_completed with the AS command */
    
SELECT name, number_grade, ROUND(fraction_completed * 100) AS percent_completed FROM student_grades;

/* Here I was asked to create a CASE where I assigned each number grade a letter grade, I then created a new column "letter_grade" with the END command */

SELECT name, number_grade,
    CASE 
    WHEN number_grade > 90 THEN "A"
    WHEN number_grade > 80 THEN "B"
    WHEN number_grade > 70 THEN "C"
    ELSE "F"
END as "letter_grade"
    FROM student_grades;
    
/* Below I was asked to group by the COUNT of letter grades based on the previous command, I achieved this by using the COUNT command, creating a CASE
for the criteria and putting that criteria in the "letter_grade" column created, and grouping it by letter grade */
    
SELECT COUNT(*),
    CASE 
    WHEN number_grade > 90 THEN "A"
    WHEN number_grade > 80 THEN "B"
    WHEN number_grade > 70 THEN "C"
    ELSE "F"
END as "letter_grade"
    FROM student_grades
GROUP BY letter_grade;
